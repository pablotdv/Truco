@using Truco.ViewModels
@model CompeticoesViewModel
<div id="no-more-tables">
    <table class="table-bordered table-striped table-condensed cf table-hover col-md-12">
        <thead class="cf">
            <tr>
                <th></th>
                <th>
                    Nome
                </th>
                <th>
                    Trios
                </th>
                <th></th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model.Resultados)
            {
                <tr>
                    <td data-title="">
                        <div class="btn-group">
                            <a class="btn btn-default" id="editar" title="Editar" href="@Url.Action("Editar", new { id=item.CompeticaoId})"><i class="fa fa-edit fa-align-left"></i></a>
                            <a class="btn btn-default" id="detalhes" title="Detalhes" href="@Url.Action("Detalhes", new {id=item.CompeticaoId})"><i class="fa fa-eye fa-align-right"></i></a>
                            <a class="btn btn-default" id="Deletar" title="Excluir" href="@Url.Action("Excluir", new { id=item.CompeticaoId })"><i class="fa fa-trash fa-align-right"></i></a>
                            @if (!item.Sorteada)
                            {
                                <a class="btn btn-default" id="Sortear" title="Excluir" href="@Url.Action("Sorteio", new { id = item.CompeticaoId })"><i class="fa fa-random"></i> Sortear</a>
                            }
                        </div>
                    </td>
                    <td data-title="Nome">
                        @item.Nome
                    </td>
                    <td>
                        @item.CompeticoesEquipes.Count
                    </td>
                    <td>
                        <div class="btn-group">
                            @foreach (var fase in item.CompeticoesFases.OrderBy(a => a.Tipo).ThenBy(a => a.Fase))
                            {
                                if (fase.Modo == Truco.Models.Enums.CompeticaoFaseModo.Chaveamento)
                                {
                                    <a href="@Url.Action("Fase", new { id = fase.CompeticaoFaseId })" class="btn btn-default">@($"{fase.Fase}ª Fase {fase.Tipo}")</a>
                                }
                                else
                                {
                                    <a href="@Url.Action("FaseMataMata", new { id = fase.CompeticaoFaseId })" class="btn btn-default">@($"{fase.Fase}ª Fase {fase.Tipo}")</a>                                    
                                }
                            }

                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@Html.PagedListPager(Model.Resultados, page => Url.Action("Pesquisa",
    new CompeticoesViewModel()
    {
        Pagina = page,
        Nome = Model.Nome
    }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
                    new PagedListRenderOptions()
                    {
                        DisplayItemSliceAndTotal = false
                    },
                    new AjaxOptions()
                    {
                        HttpMethod = "GET",
                        UpdateTargetId = "pesquisa"
                    }))

