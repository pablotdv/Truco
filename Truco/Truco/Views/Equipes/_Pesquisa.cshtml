@using Truco.ViewModels
@model EquipesViewModel
<div id="no-more-tables">
	<table class="table-bordered table-striped table-condensed cf table-hover col-md-12">
		<thead class="cf">
			<tr>
                <th class="col-lg-2 col-md-3 col-xs-12"></th>
				<th>
					Nome
				</th>
                                
            </tr>
        </thead>

        <tbody>
			@foreach (var item in Model.Resultados) 
			{
				<tr>
					<td data-title="">
						<div class="btn-group">							
							<a class="btn btn-default" id="editar" title="Editar" href="@Url.Action("Editar", new { id=item.EquipeId})"><i class="fa fa-edit fa-align-left"></i></a>							
							<a class="btn btn-default" id="detalhes" title="Detalhes" href="@Url.Action("Detalhes", new {id=item.EquipeId})"><i class="fa fa-eye fa-align-right"></i></a>							
							<a class="btn btn-default" id="Deletar" title="Excluir" href="@Url.Action("Excluir", new { id=item.EquipeId })"><i class="fa fa-trash fa-align-right"></i></a>							
						</div>									
					</td>
					<td data-title="Nome">
						@item.Nome
					</td>
				</tr>
			}                            
        </tbody>
    </table>
</div>

@Html.PagedListPager(Model.Resultados, page => Url.Action("Pesquisa", 
	new EquipesViewModel()
    {
        Pagina = page,
        Nome = Model.Nome
    }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
                    new PagedListRenderOptions()
                    {
                        DisplayItemSliceAndTotal = false
                    },
                    new AjaxOptions()
                    {
                        HttpMethod = "GET",
                        UpdateTargetId = "pesquisa"
                    }))

