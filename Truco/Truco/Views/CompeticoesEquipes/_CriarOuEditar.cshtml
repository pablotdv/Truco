@model Truco.Models.CompeticaoEquipe
@Html.HiddenFor(a => a.CompeticaoId)
<div class="row form-group">
    <div class="col-md-6">        
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @autofocus = "" } })
        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
    </div>   
</div>
<div class="row form-group">
    <div class="col-md-3 col-xs-6">
        <label>Estado</label>
        <input type="text" id="EstadoDescricao" name="EstadoDescricao" data-provide="typeahead" class="form-control typeahead" autocomplete="off" value="@(Model?.Cidade?.Estado?.Nome)">
        <input type="hidden" id="EstadoId" name="EstadoId" value="@(Model?.Cidade?.EstadoId)" />
    </div>
    <div class="col-md-3 col-xs-6">
        @Html.LabelFor(model => model.CidadeId, htmlAttributes: new { @class = "control-label" })
        <input type="text" id="CidadeDescricao" name="CidadeDescricao" data-provide="typeahead" class="form-control typeahead" autocomplete="off" value="@(Model?.Cidade?.Nome)">
        @Html.HiddenFor(a => a.CidadeId)
        @Html.ValidationMessageFor(model => model.CidadeId, "", new { @class = "text-danger" })
    </div>
</div>
